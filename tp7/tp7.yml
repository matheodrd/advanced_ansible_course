---
- name: TP7
  hosts: localhost
  vars:
    temperature_csv_url: https://raw.githubusercontent.com/MrMegaNova/advanced_ansible_course_16_06/refs/heads/main/tp7/temperature.csv
    tmp_dest_csv_path: /tmp/temperature.csv
    meteo_api_base_url: https://api.open-meteo.com/v1
    latitude: "49.20"
    longitude: "-0.40"
    city: Caen

  tasks:
    - name: Download temperature CSV file
      ansible.builtin.get_url:
        url: "{{ temperature_csv_url }}"
        dest: "{{ tmp_dest_csv_path }}"
        mode: "0644"
        force: true

    - name: Read temperature CSV file
      community.general.read_csv:
        path: "{{ tmp_dest_csv_path }}"
      register: temperature_csv

    - name: Display temperature CSV content
      ansible.builtin.debug:
        var: temperature_csv.list

    - name: Set temperatures list sorted and without duplicates
      ansible.builtin.set_fact:
        temperatures: "{{ temperature_csv.list | unique | sort(attribute='time') }}"

    - name: Display temperatures
      ansible.builtin.debug:
        var: temperatures

    - name: Fetch temperatures from API
      ansible.builtin.uri:
        url: "{{ meteo_api_base_url }}/forecast?latitude={{ latitude }}&longitude={{ longitude }}&hourly=temperature_2m"
        return_content: true
      register: meteo_response

    - name: Set API temperatures var from API response
      ansible.builtin.set_fact:
        api_temperatures: "{{ meteo_response.content | from_json }}"

    - name: Format API temperatures to match CSV data structure
      ansible.builtin.set_fact:
        api_temperatures: "{{ api_temperatures.hourly | format_api_temperatures }}"

    - name: Render template to compare temperatures
      ansible.builtin.template:
        src: compare_temps.j2
        dest: ./compare_temps.md
        mode: "0644"
        force: true
      vars:
        api_temps: "{{ api_temperatures }}"
        csv_temps: "{{ temperatures }}"
